{"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"DLV_wBziBmx_","executionInfo":{"status":"ok","timestamp":1705846860097,"user_tz":-420,"elapsed":2400,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from imblearn.over_sampling import RandomOverSampler\n","from imblearn.over_sampling import SMOTE\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import recall_score,f1_score,precision_score,make_scorer,classification_report\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import time"]},{"cell_type":"markdown","source":["# kiểm tra và xử lí dữ liệu"],"metadata":{"id":"Z1lOS1OoAEvb"}},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":255},"executionInfo":{"elapsed":1954,"status":"ok","timestamp":1705846975993,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"39GQjS4oB7lv","outputId":"f085489f-ed2a-4623-bd31-38b436f126b0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Time        V1        V2        V3        V4        V5        V6        V7  \\\n","0   0.0 -1.359807 -0.072781  2.536347  1.378155 -0.338321  0.462388  0.239599   \n","1   0.0  1.191857  0.266151  0.166480  0.448154  0.060018 -0.082361 -0.078803   \n","2   1.0 -1.358354 -1.340163  1.773209  0.379780 -0.503198  1.800499  0.791461   \n","3   1.0 -0.966272 -0.185226  1.792993 -0.863291 -0.010309  1.247203  0.237609   \n","4   2.0 -1.158233  0.877737  1.548718  0.403034 -0.407193  0.095921  0.592941   \n","\n","         V8        V9  ...       V21       V22       V23       V24       V25  \\\n","0  0.098698  0.363787  ... -0.018307  0.277838 -0.110474  0.066928  0.128539   \n","1  0.085102 -0.255425  ... -0.225775 -0.638672  0.101288 -0.339846  0.167170   \n","2  0.247676 -1.514654  ...  0.247998  0.771679  0.909412 -0.689281 -0.327642   \n","3  0.377436 -1.387024  ... -0.108300  0.005274 -0.190321 -1.175575  0.647376   \n","4 -0.270533  0.817739  ... -0.009431  0.798278 -0.137458  0.141267 -0.206010   \n","\n","        V26       V27       V28  Amount  Class  \n","0 -0.189115  0.133558 -0.021053  149.62      0  \n","1  0.125895 -0.008983  0.014724    2.69      0  \n","2 -0.139097 -0.055353 -0.059752  378.66      0  \n","3 -0.221929  0.062723  0.061458  123.50      0  \n","4  0.502292  0.219422  0.215153   69.99      0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-39b7594e-3a42-420f-8654-e565a9192904\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>0.363787</td>\n","      <td>...</td>\n","      <td>-0.018307</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>149.62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>-0.255425</td>\n","      <td>...</td>\n","      <td>-0.225775</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>2.69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>-1.514654</td>\n","      <td>...</td>\n","      <td>0.247998</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>378.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>-1.387024</td>\n","      <td>...</td>\n","      <td>-0.108300</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>123.50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>0.817739</td>\n","      <td>...</td>\n","      <td>-0.009431</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>69.99</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39b7594e-3a42-420f-8654-e565a9192904')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39b7594e-3a42-420f-8654-e565a9192904 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39b7594e-3a42-420f-8654-e565a9192904');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b75be200-eeb6-4f81-aa7c-99ade423c663\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b75be200-eeb6-4f81-aa7c-99ade423c663')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b75be200-eeb6-4f81-aa7c-99ade423c663 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}],"source":["df=pd.read_csv('/content/drive/MyDrive/mining/mid/creditcard.csv')\n","df.head()"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"executionInfo":{"elapsed":566,"status":"ok","timestamp":1705846870912,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"fYneoNPmFovk","outputId":"cec8905f-620c-4eaf-81b6-ee4b8e7b4194"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Time            V1            V2            V3            V4  \\\n","count  284807.000000  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05   \n","mean    94813.859575  1.168375e-15  3.416908e-16 -1.379537e-15  2.074095e-15   \n","std     47488.145955  1.958696e+00  1.651309e+00  1.516255e+00  1.415869e+00   \n","min         0.000000 -5.640751e+01 -7.271573e+01 -4.832559e+01 -5.683171e+00   \n","25%     54201.500000 -9.203734e-01 -5.985499e-01 -8.903648e-01 -8.486401e-01   \n","50%     84692.000000  1.810880e-02  6.548556e-02  1.798463e-01 -1.984653e-02   \n","75%    139320.500000  1.315642e+00  8.037239e-01  1.027196e+00  7.433413e-01   \n","max    172792.000000  2.454930e+00  2.205773e+01  9.382558e+00  1.687534e+01   \n","\n","                 V5            V6            V7            V8            V9  \\\n","count  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05   \n","mean   9.604066e-16  1.487313e-15 -5.556467e-16  1.213481e-16 -2.406331e-15   \n","std    1.380247e+00  1.332271e+00  1.237094e+00  1.194353e+00  1.098632e+00   \n","min   -1.137433e+02 -2.616051e+01 -4.355724e+01 -7.321672e+01 -1.343407e+01   \n","25%   -6.915971e-01 -7.682956e-01 -5.540759e-01 -2.086297e-01 -6.430976e-01   \n","50%   -5.433583e-02 -2.741871e-01  4.010308e-02  2.235804e-02 -5.142873e-02   \n","75%    6.119264e-01  3.985649e-01  5.704361e-01  3.273459e-01  5.971390e-01   \n","max    3.480167e+01  7.330163e+01  1.205895e+02  2.000721e+01  1.559499e+01   \n","\n","       ...           V21           V22           V23           V24  \\\n","count  ...  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05   \n","mean   ...  1.654067e-16 -3.568593e-16  2.578648e-16  4.473266e-15   \n","std    ...  7.345240e-01  7.257016e-01  6.244603e-01  6.056471e-01   \n","min    ... -3.483038e+01 -1.093314e+01 -4.480774e+01 -2.836627e+00   \n","25%    ... -2.283949e-01 -5.423504e-01 -1.618463e-01 -3.545861e-01   \n","50%    ... -2.945017e-02  6.781943e-03 -1.119293e-02  4.097606e-02   \n","75%    ...  1.863772e-01  5.285536e-01  1.476421e-01  4.395266e-01   \n","max    ...  2.720284e+01  1.050309e+01  2.252841e+01  4.584549e+00   \n","\n","                V25           V26           V27           V28         Amount  \\\n","count  2.848070e+05  2.848070e+05  2.848070e+05  2.848070e+05  284807.000000   \n","mean   5.340915e-16  1.683437e-15 -3.660091e-16 -1.227390e-16      88.349619   \n","std    5.212781e-01  4.822270e-01  4.036325e-01  3.300833e-01     250.120109   \n","min   -1.029540e+01 -2.604551e+00 -2.256568e+01 -1.543008e+01       0.000000   \n","25%   -3.171451e-01 -3.269839e-01 -7.083953e-02 -5.295979e-02       5.600000   \n","50%    1.659350e-02 -5.213911e-02  1.342146e-03  1.124383e-02      22.000000   \n","75%    3.507156e-01  2.409522e-01  9.104512e-02  7.827995e-02      77.165000   \n","max    7.519589e+00  3.517346e+00  3.161220e+01  3.384781e+01   25691.160000   \n","\n","               Class  \n","count  284807.000000  \n","mean        0.001727  \n","std         0.041527  \n","min         0.000000  \n","25%         0.000000  \n","50%         0.000000  \n","75%         0.000000  \n","max         1.000000  \n","\n","[8 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-293ae15d-37ff-4bbb-b959-6c49ab77286d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>284807.000000</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>...</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>2.848070e+05</td>\n","      <td>284807.000000</td>\n","      <td>284807.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>94813.859575</td>\n","      <td>1.168375e-15</td>\n","      <td>3.416908e-16</td>\n","      <td>-1.379537e-15</td>\n","      <td>2.074095e-15</td>\n","      <td>9.604066e-16</td>\n","      <td>1.487313e-15</td>\n","      <td>-5.556467e-16</td>\n","      <td>1.213481e-16</td>\n","      <td>-2.406331e-15</td>\n","      <td>...</td>\n","      <td>1.654067e-16</td>\n","      <td>-3.568593e-16</td>\n","      <td>2.578648e-16</td>\n","      <td>4.473266e-15</td>\n","      <td>5.340915e-16</td>\n","      <td>1.683437e-15</td>\n","      <td>-3.660091e-16</td>\n","      <td>-1.227390e-16</td>\n","      <td>88.349619</td>\n","      <td>0.001727</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>47488.145955</td>\n","      <td>1.958696e+00</td>\n","      <td>1.651309e+00</td>\n","      <td>1.516255e+00</td>\n","      <td>1.415869e+00</td>\n","      <td>1.380247e+00</td>\n","      <td>1.332271e+00</td>\n","      <td>1.237094e+00</td>\n","      <td>1.194353e+00</td>\n","      <td>1.098632e+00</td>\n","      <td>...</td>\n","      <td>7.345240e-01</td>\n","      <td>7.257016e-01</td>\n","      <td>6.244603e-01</td>\n","      <td>6.056471e-01</td>\n","      <td>5.212781e-01</td>\n","      <td>4.822270e-01</td>\n","      <td>4.036325e-01</td>\n","      <td>3.300833e-01</td>\n","      <td>250.120109</td>\n","      <td>0.041527</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>-5.640751e+01</td>\n","      <td>-7.271573e+01</td>\n","      <td>-4.832559e+01</td>\n","      <td>-5.683171e+00</td>\n","      <td>-1.137433e+02</td>\n","      <td>-2.616051e+01</td>\n","      <td>-4.355724e+01</td>\n","      <td>-7.321672e+01</td>\n","      <td>-1.343407e+01</td>\n","      <td>...</td>\n","      <td>-3.483038e+01</td>\n","      <td>-1.093314e+01</td>\n","      <td>-4.480774e+01</td>\n","      <td>-2.836627e+00</td>\n","      <td>-1.029540e+01</td>\n","      <td>-2.604551e+00</td>\n","      <td>-2.256568e+01</td>\n","      <td>-1.543008e+01</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>54201.500000</td>\n","      <td>-9.203734e-01</td>\n","      <td>-5.985499e-01</td>\n","      <td>-8.903648e-01</td>\n","      <td>-8.486401e-01</td>\n","      <td>-6.915971e-01</td>\n","      <td>-7.682956e-01</td>\n","      <td>-5.540759e-01</td>\n","      <td>-2.086297e-01</td>\n","      <td>-6.430976e-01</td>\n","      <td>...</td>\n","      <td>-2.283949e-01</td>\n","      <td>-5.423504e-01</td>\n","      <td>-1.618463e-01</td>\n","      <td>-3.545861e-01</td>\n","      <td>-3.171451e-01</td>\n","      <td>-3.269839e-01</td>\n","      <td>-7.083953e-02</td>\n","      <td>-5.295979e-02</td>\n","      <td>5.600000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>84692.000000</td>\n","      <td>1.810880e-02</td>\n","      <td>6.548556e-02</td>\n","      <td>1.798463e-01</td>\n","      <td>-1.984653e-02</td>\n","      <td>-5.433583e-02</td>\n","      <td>-2.741871e-01</td>\n","      <td>4.010308e-02</td>\n","      <td>2.235804e-02</td>\n","      <td>-5.142873e-02</td>\n","      <td>...</td>\n","      <td>-2.945017e-02</td>\n","      <td>6.781943e-03</td>\n","      <td>-1.119293e-02</td>\n","      <td>4.097606e-02</td>\n","      <td>1.659350e-02</td>\n","      <td>-5.213911e-02</td>\n","      <td>1.342146e-03</td>\n","      <td>1.124383e-02</td>\n","      <td>22.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>139320.500000</td>\n","      <td>1.315642e+00</td>\n","      <td>8.037239e-01</td>\n","      <td>1.027196e+00</td>\n","      <td>7.433413e-01</td>\n","      <td>6.119264e-01</td>\n","      <td>3.985649e-01</td>\n","      <td>5.704361e-01</td>\n","      <td>3.273459e-01</td>\n","      <td>5.971390e-01</td>\n","      <td>...</td>\n","      <td>1.863772e-01</td>\n","      <td>5.285536e-01</td>\n","      <td>1.476421e-01</td>\n","      <td>4.395266e-01</td>\n","      <td>3.507156e-01</td>\n","      <td>2.409522e-01</td>\n","      <td>9.104512e-02</td>\n","      <td>7.827995e-02</td>\n","      <td>77.165000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>172792.000000</td>\n","      <td>2.454930e+00</td>\n","      <td>2.205773e+01</td>\n","      <td>9.382558e+00</td>\n","      <td>1.687534e+01</td>\n","      <td>3.480167e+01</td>\n","      <td>7.330163e+01</td>\n","      <td>1.205895e+02</td>\n","      <td>2.000721e+01</td>\n","      <td>1.559499e+01</td>\n","      <td>...</td>\n","      <td>2.720284e+01</td>\n","      <td>1.050309e+01</td>\n","      <td>2.252841e+01</td>\n","      <td>4.584549e+00</td>\n","      <td>7.519589e+00</td>\n","      <td>3.517346e+00</td>\n","      <td>3.161220e+01</td>\n","      <td>3.384781e+01</td>\n","      <td>25691.160000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-293ae15d-37ff-4bbb-b959-6c49ab77286d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-293ae15d-37ff-4bbb-b959-6c49ab77286d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-293ae15d-37ff-4bbb-b959-6c49ab77286d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04ad2633-45e8-4620-b07c-0ddfc6a4b94c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04ad2633-45e8-4620-b07c-0ddfc6a4b94c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04ad2633-45e8-4620-b07c-0ddfc6a4b94c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}],"source":["df.describe()"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":599,"status":"ok","timestamp":1705846877443,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"qS96gkl66UkJ","outputId":"a376a3ef-32e4-4dd3-ca8c-cd6ee2a26c93"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Time      0\n","V1        0\n","V2        0\n","V3        0\n","V4        0\n","V5        0\n","V6        0\n","V7        0\n","V8        0\n","V9        0\n","V10       0\n","V11       0\n","V12       0\n","V13       0\n","V14       0\n","V15       0\n","V16       0\n","V17       0\n","V18       0\n","V19       0\n","V20       0\n","V21       0\n","V22       0\n","V23       0\n","V24       0\n","V25       0\n","V26       0\n","V27       0\n","V28       0\n","Amount    0\n","Class     0\n","dtype: int64"]},"metadata":{},"execution_count":5}],"source":["df.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5280,"status":"ok","timestamp":1705836087909,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"GmP5ZZ5k-7eu","outputId":"3f3818e0-4525-4ac1-85fa-ea0fb02d4e15"},"outputs":[{"output_type":"stream","name":"stdout","text":["(283726, 31)\n","0    283253\n","1       473\n","Name: Class, dtype: int64\n"]}],"source":["df.drop_duplicates(inplace=True)\n","print(df.shape )\n","print(df['Class'].value_counts())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2006,"status":"ok","timestamp":1705836089912,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"tQ4_mix3-bXv","outputId":"d11382b4-59d3-409e-d8fa-8b80eb17b319"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Time      1\n","V1        1\n","V2        1\n","V3        1\n","V4        1\n","V5        1\n","V6        1\n","V7        1\n","V8        1\n","V9        1\n","V10       1\n","V11       1\n","V12       1\n","V13       1\n","V14       1\n","V15       1\n","V16       1\n","V17       1\n","V18       1\n","V19       1\n","V20       1\n","V21       1\n","V22       1\n","V23       1\n","V24       1\n","V25       1\n","V26       1\n","V27       1\n","V28       1\n","Amount    1\n","Class     1\n","dtype: int64"]},"metadata":{},"execution_count":4}],"source":["(df.corr()>0.7).sum()"]},{"cell_type":"code","source":["X=df.drop('Class',axis=1)\n","y=df['Class']"],"metadata":{"id":"fQAaKZ19UjQ_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# xây dựng model"],"metadata":{"id":"3rluqzueFo3T"}},{"cell_type":"markdown","source":["## model để nguyên dữ liệu ban đầu"],"metadata":{"id":"yxTYeeGXG4BH"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":332,"status":"ok","timestamp":1705836109669,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"ORVm3oCcFDX1","outputId":"b6fb6326-a779-4648-c32d-4bcf655f2b08"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["((198608, 30), (85118, 30))"]},"metadata":{},"execution_count":8}],"source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42,shuffle=True)\n","X_train.shape,X_test.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":529},"executionInfo":{"elapsed":735,"status":"ok","timestamp":1705836114889,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"-aSb-nkYfxYY","outputId":"c7e8bea4-6d2d-4eb5-f28d-051e312fa76f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0    198269\n"," 1       339\n"," Name: Class, dtype: int64,\n"," 0    84984\n"," 1      134\n"," Name: Class, dtype: int64)"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["y_train.value_counts().plot.bar()\n","y_train.value_counts(),y_test.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PGOJtXYK85iM"},"outputs":[],"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","model1 = RandomForestClassifier()\n","model1.fit(X_train,y_train)\n","\n","y_predictions_rf = model1.predict(X_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1705286583167,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"AXUhmBFiMDaN","outputId":"a54248d6-3f23-46cf-b19f-ddb875ae5970"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.9995594403129736\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00     56656\n","           1       0.97      0.74      0.84        90\n","\n","    accuracy                           1.00     56746\n","   macro avg       0.99      0.87      0.92     56746\n","weighted avg       1.00      1.00      1.00     56746\n","\n"]}],"source":["target_names = ['0', '1']\n","print(accuracy_score(y_test,y_predictions_rf))\n","print(classification_report(y_test, y_predictions_rf, target_names=target_names))"]},{"cell_type":"markdown","source":["## model với các tỉ lệ nhãn khác nhau"],"metadata":{"id":"0eYHRvAhHKGC"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"5-cBspf6lYXi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1705332126280,"user_tz":-420,"elapsed":854231,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"9bb5cf36-70e8-4311-a4db-e6f9c851fafa"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.5\n","0\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 1 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.6\n","1\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.7\n","2\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.8\n","3\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.9\n","4\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]}],"source":["from imblearn.over_sampling import RandomOverSampler\n","modelrandom=[]\n","\n","percent = np.linspace(0.5, 0.9,5)\n","scores=[]\n","for i ,j in zip(percent,range(0,5,1)):\n","  print(i)\n","  print(j)\n","  total_samples = 226597/(i)\n","  samples_faud = int((1-i)*total_samples)\n","  ros = RandomOverSampler(sampling_strategy={0:226597 , 1: samples_faud})\n","  X_train_ros, y_train_ros = ros.fit_resample(X_train, y_train)\n","  modelrandom.append(RandomForestClassifier())\n","  modelrandom[j].fit(X_train_ros,y_train_ros)\n","  y_predictions_rf_ros = modelrandom[j].predict(X_test)\n","  acc=accuracy_score(y_test,y_predictions_rf_ros)\n","  recall=recall_score(y_test, y_predictions_rf_ros)\n","  precision=precision_score(y_test, y_predictions_rf_ros)\n","  scores.append([i, recall, precision,acc])\n","dfr = pd.DataFrame(scores, columns=['tỉ lệ lớp 0', 'recall_ros', 'precision_ros','accuracy_ros'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4sas1pfCxMjG","executionInfo":{"status":"ok","timestamp":1705331228820,"user_tz":-420,"elapsed":1725179,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"492c33a8-867c-462d-ce7c-0a7209217f20"},"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["0.5\n"]},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 1 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["0.6\n"]},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.7\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.8\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.9\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/imblearn/utils/_validation.py:313: UserWarning: After over-sampling, the number of samples (226597) in class 0 will be larger than the number of samples in the majority class (class #0 -> 198269)\n","  warnings.warn(\n"]}],"source":["\n","modelSMOTE=[]\n","\n","percent = np.linspace(0.5, 0.9,5)\n","scores=[]\n","for i ,j in zip(percent,range(0,5,1)):\n","  print(i)\n","  total_samples = 226597/(i)\n","  samples_faud = int((1-i)*total_samples)\n","  smote = SMOTE(sampling_strategy={0:226597 , 1: samples_faud})\n","  X_train_smote, y_train_smote = smote.fit_resample(X_train, y_train)\n","\n","  modelSMOTE.append(RandomForestClassifier())\n","  modelSMOTE[j].fit(X_train_smote,y_train_smote)\n","  y_predictions_rf_smote = modelSMOTE[j].predict(X_test)\n","  acc=accuracy_score(y_test,y_predictions_rf_smote)\n","  recall=recall_score(y_test, y_predictions_rf_smote)\n","  precision=precision_score(y_test, y_predictions_rf_smote)\n","  scores.append([i, recall, precision,acc])\n","dfsmote = pd.DataFrame(scores, columns=['tỉ lệ lớp 0', 'recall_smote', 'precision_smote','accuracy_smote'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":647,"status":"ok","timestamp":1705332143750,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"zEd09h_7FJ0u","outputId":"bc19af75-db94-43ea-e085-5d9f4348664d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   tỉ lệ lớp 0  recall_ros  precision_ros  accuracy_ros  f1_score_ros  \\\n","0          0.5    0.746269       0.952381      0.999542      0.836820   \n","1          0.6    0.761194       0.944444      0.999554      0.842975   \n","2          0.7    0.761194       0.944444      0.999554      0.842975   \n","3          0.8    0.746269       0.952381      0.999542      0.836820   \n","4          0.9    0.761194       0.953271      0.999565      0.846473   \n","\n","   recall_smote  precision_smote  accuracy_smote  f1_score_smote  \n","0      0.776119         0.881356        0.999483        0.825397  \n","1      0.783582         0.905172        0.999530        0.840000  \n","2      0.776119         0.904348        0.999518        0.835341  \n","3      0.791045         0.938053        0.999589        0.858300  \n","4      0.783582         0.921053        0.999554        0.846774  "],"text/html":["\n","  <div id=\"df-f45fd381-9861-4885-b95f-23f257d96b3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tỉ lệ lớp 0</th>\n","      <th>recall_ros</th>\n","      <th>precision_ros</th>\n","      <th>accuracy_ros</th>\n","      <th>f1_score_ros</th>\n","      <th>recall_smote</th>\n","      <th>precision_smote</th>\n","      <th>accuracy_smote</th>\n","      <th>f1_score_smote</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.5</td>\n","      <td>0.746269</td>\n","      <td>0.952381</td>\n","      <td>0.999542</td>\n","      <td>0.836820</td>\n","      <td>0.776119</td>\n","      <td>0.881356</td>\n","      <td>0.999483</td>\n","      <td>0.825397</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.6</td>\n","      <td>0.761194</td>\n","      <td>0.944444</td>\n","      <td>0.999554</td>\n","      <td>0.842975</td>\n","      <td>0.783582</td>\n","      <td>0.905172</td>\n","      <td>0.999530</td>\n","      <td>0.840000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.7</td>\n","      <td>0.761194</td>\n","      <td>0.944444</td>\n","      <td>0.999554</td>\n","      <td>0.842975</td>\n","      <td>0.776119</td>\n","      <td>0.904348</td>\n","      <td>0.999518</td>\n","      <td>0.835341</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.8</td>\n","      <td>0.746269</td>\n","      <td>0.952381</td>\n","      <td>0.999542</td>\n","      <td>0.836820</td>\n","      <td>0.791045</td>\n","      <td>0.938053</td>\n","      <td>0.999589</td>\n","      <td>0.858300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.9</td>\n","      <td>0.761194</td>\n","      <td>0.953271</td>\n","      <td>0.999565</td>\n","      <td>0.846473</td>\n","      <td>0.783582</td>\n","      <td>0.921053</td>\n","      <td>0.999554</td>\n","      <td>0.846774</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f45fd381-9861-4885-b95f-23f257d96b3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f45fd381-9861-4885-b95f-23f257d96b3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f45fd381-9861-4885-b95f-23f257d96b3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b262494f-9474-43f7-be76-fd579bdda24f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b262494f-9474-43f7-be76-fd579bdda24f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b262494f-9474-43f7-be76-fd579bdda24f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_52589d75-45de-40db-b787-3d6f93d43318\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_52589d75-45de-40db-b787-3d6f93d43318 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}],"source":["dfr['f1_score_ros']=(2*dfr['recall_ros']*dfr['precision_ros'])/(dfr['recall_ros']+dfr['precision_ros'])\n","dfsmote['f1_score_smote']=(2*dfsmote['recall_smote']*dfsmote['precision_smote'])/(dfsmote['recall_smote']+dfsmote['precision_smote'])\n","\n","result = pd.merge(dfr, dfsmote,on='tỉ lệ lớp 0')\n","result"]},{"cell_type":"markdown","source":["model đạt kết quả tốt nhất với tỉ lệ dữ liệu 80(0)-20(1)"],"metadata":{"id":"KXpokZydQXCU"}},{"cell_type":"markdown","metadata":{"id":"bMzPmYuuwgXk"},"source":["# logistic regression"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":843,"status":"ok","timestamp":1705836193836,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"},"user_tz":-420},"id":"vJ14fRB59Hvu","outputId":"f1eeb930-8b74-463f-ef9f-2630f3ca6fe6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    198269\n","1     49567\n","Name: Class, dtype: int64"]},"metadata":{},"execution_count":13}],"source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42,shuffle=True)\n","number_0=y_train.value_counts()[0]\n","total_samples = number_0/(0.8)\n","samples_faud = int((1-0.8)*total_samples)\n","smote = SMOTE(sampling_strategy={0:number_0 , 1: samples_faud})\n","X_train, y_train = smote.fit_resample(X_train, y_train)\n","y_train.value_counts()\n"]},{"cell_type":"code","source":["model1=LogisticRegression()\n","model1.fit(X_train,y_train)\n","pre=model1.predict(X_test)\n","print(confusion_matrix(y_test, pre))\n","print(classification_report(y_test, pre, target_names= ['0', '1']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rvGqcFmwhlD0","executionInfo":{"status":"ok","timestamp":1705836148404,"user_tz":-420,"elapsed":10039,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"b86b71e9-bfc1-4fb8-9ba8-9816bf6b3641"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["[[84330   654]\n"," [   22   112]]\n","              precision    recall  f1-score   support\n","\n","           0       1.00      0.99      1.00     84984\n","           1       0.15      0.84      0.25       134\n","\n","    accuracy                           0.99     85118\n","   macro avg       0.57      0.91      0.62     85118\n","weighted avg       1.00      0.99      0.99     85118\n","\n"]}]},{"cell_type":"markdown","source":["## điều chỉnh model"],"metadata":{"id":"7Kywv3B1uxmC"}},{"cell_type":"markdown","source":["### dùng l1 regularization để loại bỏ một số biến"],"metadata":{"id":"Nrmc53v3VkpG"}},{"cell_type":"code","source":["from sklearn.linear_model import Lasso\n","from sklearn.model_selection import GridSearchCV\n","alpha=np.arange(0.001,0.25,0.001)\n","selected_variables=[]\n","for i in alpha:\n","  model = Lasso(alpha=i)#0.005\n","  model.fit(X_train, y_train)\n","  selected_variables.append(X.columns[model.coef_ != 0])"],"metadata":{"id":"aTfvGPduhxmh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test=[]\n","for i in range(0,len(alpha),1):\n","  X_train_1=X_train[selected_variables[i]]\n","  X_test_1=X_test[selected_variables[i]]\n","  model1=LogisticRegression()\n","  model1.fit(X_train_1,y_train)\n","  pre=model1.predict(X_test_1)\n","  recall=recall_score(y_test, pre)\n","  precision=precision_score(y_test, pre)\n","  n_var=len(selected_variables[i])\n","  test.append([n_var,recall, precision])\n","select = pd.DataFrame(test, columns=[ 'n_var','recall', 'precision'])"],"metadata":{"id":"-4Lq_FrMde_M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["select.sort_values(by='recall',ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Z1hd64Twe5pq","executionInfo":{"status":"ok","timestamp":1705380874090,"user_tz":-420,"elapsed":5,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"a5408cc8-f929-4778-eb50-4f13e224fd0a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     n_var    recall  precision\n","12      14  0.904412   0.171788\n","19       8  0.904412   0.162698\n","17       8  0.904412   0.162698\n","16       8  0.904412   0.162698\n","20       8  0.904412   0.162698\n","..     ...       ...        ...\n","232      2  0.860294   0.130580\n","231      2  0.860294   0.130580\n","230      2  0.860294   0.130580\n","229      2  0.860294   0.130580\n","248      2  0.860294   0.130580\n","\n","[249 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-76acf367-65d4-4953-95ec-800e65941f75\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>n_var</th>\n","      <th>recall</th>\n","      <th>precision</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>12</th>\n","      <td>14</td>\n","      <td>0.904412</td>\n","      <td>0.171788</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>8</td>\n","      <td>0.904412</td>\n","      <td>0.162698</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>8</td>\n","      <td>0.904412</td>\n","      <td>0.162698</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>8</td>\n","      <td>0.904412</td>\n","      <td>0.162698</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>8</td>\n","      <td>0.904412</td>\n","      <td>0.162698</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>2</td>\n","      <td>0.860294</td>\n","      <td>0.130580</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>2</td>\n","      <td>0.860294</td>\n","      <td>0.130580</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>2</td>\n","      <td>0.860294</td>\n","      <td>0.130580</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>2</td>\n","      <td>0.860294</td>\n","      <td>0.130580</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>2</td>\n","      <td>0.860294</td>\n","      <td>0.130580</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>249 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76acf367-65d4-4953-95ec-800e65941f75')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-76acf367-65d4-4953-95ec-800e65941f75 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-76acf367-65d4-4953-95ec-800e65941f75');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8a1bb6e5-2984-4ebe-9700-79cc50a97682\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a1bb6e5-2984-4ebe-9700-79cc50a97682')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8a1bb6e5-2984-4ebe-9700-79cc50a97682 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","source":["chọn lấy các số lượng biến đầu vào theo recall cao sẽ giúp phân loại các trường hợp gian lận tốt hơn"],"metadata":{"id":"Lh1sMY6bkwiT"}},{"cell_type":"code","source":["selected_variables[12]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LWQdeaevhZLE","executionInfo":{"status":"ok","timestamp":1705379380021,"user_tz":-420,"elapsed":455,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"006b7db0-78b3-4573-fd74-8190ff6bbd82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['V1', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V10', 'V11', 'V12', 'V13',\n","       'V14', 'V18', 'V21'],\n","      dtype='object')"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["X_train=X_train[['V1', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V10', 'V11', 'V12', 'V13',\n","       'V14', 'V18', 'V21']]\n","X_test=X_test[['V1', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V10', 'V11', 'V12', 'V13',\n","       'V14', 'V18', 'V21']]"],"metadata":{"id":"5cX6dxb_YUir"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### GridSearchCV tìm ra các tham số có kết quả tốt"],"metadata":{"id":"b8bH-zFsWaim"}},{"cell_type":"code","source":["\n","from sklearn.model_selection import GridSearchCV\n","\n","log_reg_params = { 'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000],'solver': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']}\n","\n","\n","\n","grid_log_reg = GridSearchCV(LogisticRegression(), log_reg_params,scoring ='precision')\n","grid_log_reg.fit(X_train, y_train)\n","\n","log_reg = grid_log_reg.best_estimator_\n","log_reg\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"GAOi4bZmlDSr","executionInfo":{"status":"ok","timestamp":1705393684595,"user_tz":-420,"elapsed":572652,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"10431cfc-396c-402a-a856-8739c5569786"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=0.001, solver='newton-cg')"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=0.001, solver=&#x27;newton-cg&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(C=0.001, solver=&#x27;newton-cg&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["log_reg = LogisticRegression(C=0.001, solver='newton-cg')\n","model=log_reg\n","model.fit(X_train,y_train)\n","predic=model.predict(X_test)\n","print(confusion_matrix(y_test, predic))\n","print(accuracy_score(y_test,predic))\n","print(classification_report(y_test, pre, target_names=['0', '1']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WTVGCQK1YyFR","executionInfo":{"status":"ok","timestamp":1705837544387,"user_tz":-420,"elapsed":2655,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"581549d8-1ef3-44a0-d818-368389987df0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[84573   411]\n"," [   21   113]]\n","0.9949246927794356\n","              precision    recall  f1-score   support\n","\n","           0       1.00      0.99      1.00     84984\n","           1       0.15      0.84      0.25       134\n","\n","    accuracy                           0.99     85118\n","   macro avg       0.57      0.91      0.62     85118\n","weighted avg       1.00      0.99      0.99     85118\n","\n"]}]},{"cell_type":"code","source":["thre = np.arange(0.05, 1, 0.05)\n","scores = []\n","for i in thre:\n","  y_pred_new_threshold = ((model.predict_proba(X_test)[:, 1] >= i)).astype(int)\n","  recall=recall_score(y_test, y_pred_new_threshold)\n","  precision=precision_score(y_test, y_pred_new_threshold)\n","  # accuracy=accuracy_score(y_test, y_pred_new_threshold)\n","  scores.append([i, recall, precision])\n","threshold = pd.DataFrame(scores, columns=['threshold', 'recall', 'precision'])\n","print(threshold)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QrZ-Dh-oY-eh","executionInfo":{"status":"ok","timestamp":1705393867940,"user_tz":-420,"elapsed":3095,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"e9a8188a-df3f-47cd-b5c3-871b55b1109c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    threshold    recall  precision\n","0        0.05  0.940299   0.011808\n","1        0.10  0.925373   0.029489\n","2        0.15  0.888060   0.049501\n","3        0.20  0.873134   0.069436\n","4        0.25  0.873134   0.088906\n","5        0.30  0.865672   0.110793\n","6        0.35  0.850746   0.125967\n","7        0.40  0.843284   0.140025\n","8        0.45  0.843284   0.156944\n","9        0.50  0.843284   0.176563\n","10       0.55  0.835821   0.194444\n","11       0.60  0.835821   0.225806\n","12       0.65  0.828358   0.277500\n","13       0.70  0.820896   0.341615\n","14       0.75  0.820896   0.440000\n","15       0.80  0.813433   0.511737\n","16       0.85  0.805970   0.613636\n","17       0.90  0.798507   0.664596\n","18       0.95  0.768657   0.725352\n"]}]},{"cell_type":"code","source":["threshold.plot.line(x='threshold')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"_XffSU88rgBJ","executionInfo":{"status":"ok","timestamp":1705393869949,"user_tz":-420,"elapsed":738,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"229da56b-ab4c-49ab-b3db-77a4e9785e8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='threshold'>"]},"metadata":{},"execution_count":34},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## so với mô hình ban đầu"],"metadata":{"id":"zhgZwPYua6Sr"}},{"cell_type":"code","source":["y_pred_new_threshold = ((model.predict_proba(X_test)[:, 1] >= 0.9)).astype(int)\n","print(confusion_matrix(y_test, y_pred_new_threshold))\n","print('Accuracy score:', accuracy_score(y_test, y_pred_new_threshold))\n","print(classification_report(y_test, y_pred_new_threshold, target_names=['0', '1']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_9a2S6weZHeX","executionInfo":{"status":"ok","timestamp":1705394267042,"user_tz":-420,"elapsed":357,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"921adb27-a34f-47b0-9d47-8e5bdd5057d1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[84930    54]\n"," [   27   107]]\n","Accuracy score: 0.9990483798961441\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00     84984\n","           1       0.66      0.80      0.73       134\n","\n","    accuracy                           1.00     85118\n","   macro avg       0.83      0.90      0.86     85118\n","weighted avg       1.00      1.00      1.00     85118\n","\n"]}]},{"cell_type":"code","source":["\n","print(confusion_matrix(y_test,pre))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"44zMcO9eWOXf","executionInfo":{"status":"ok","timestamp":1705394123776,"user_tz":-420,"elapsed":503,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"4a59bebc-b8fb-4ac0-e8a6-c8d78e940b98"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[84457   527]\n"," [   21   113]]\n"]}]},{"cell_type":"markdown","source":["phần trăm giảm sự nhầm lần khách hàng từ âm tính thành dương tính giảm 87%(527 xuống 68)"],"metadata":{"id":"hluWQWnGar0E"}},{"cell_type":"code","source":["model.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7QgjNITtaTeb","executionInfo":{"status":"ok","timestamp":1705394131506,"user_tz":-420,"elapsed":3,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"bb4dc05b-417a-46ce-ecfb-22ad347a7561"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.03544673,  0.07953281,  0.73125973,  0.04843018, -0.16346112,\n","         0.00876506, -0.25582466, -0.46524737,  0.40093164, -0.52889934,\n","        -0.37117827, -0.6333818 , -0.04860106,  0.13294069]])"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["model.intercept_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BCa2G7bvaXvt","executionInfo":{"status":"ok","timestamp":1705394177015,"user_tz":-420,"elapsed":2,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"bec67d53-1220-4573-e84f-61f29dfdf83a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-4.28548786])"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["\n","\n","start_time = time.time()\n","model.predict(X_test.iloc[1, :].values.reshape(1, -1) )\n","end_time = time.time()\n","\n","# Tính thời gian dự đoán\n","prediction_time = end_time - start_time\n","\n","print(f\"Thời gian dự đoán: {prediction_time} giây\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bk8qM_WF16XB","executionInfo":{"status":"ok","timestamp":1705837628826,"user_tz":-420,"elapsed":2,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"f0e24406-eda7-4850-8e4f-9fc00bce60a4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Thời gian dự đoán: 0.004702568054199219 giây\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["## kết luận"],"metadata":{"id":"SLzq1BSfw7hY"}},{"cell_type":"markdown","source":["+ do mô hình bị mất cân bằng nên độ chính xác rất cao (99%)\n","+ F1 score đạt 73% trong mô hình phân loại khá tốt"],"metadata":{"id":"RMxg3nV7w-e4"}},{"cell_type":"markdown","source":["# trực quan"],"metadata":{"id":"q8N4rnHHZN9M"}},{"cell_type":"code","source":["sns.boxplot(data=df,\n","            x='Amount')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"4tu_J0ieZgaJ","executionInfo":{"status":"ok","timestamp":1705846904273,"user_tz":-420,"elapsed":1290,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"1a318cca-24d6-4532-a173-179c2018a8b7"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Amount'>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Biểu đồ hơi lệch sang phải. Điều này có nghĩa là có một số giá trị cao hơn kéo phân phối sang bên phải. Điều này có thể cho thấy rằng có một số lượng nhỏ các giá trị lớn hơn nhiều so với các giá trị khác trong tập dữ liệu."],"metadata":{"id":"S4-OBK0dcjBR"}},{"cell_type":"code","source":["x= df['Time']\n","sns.distplot(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":673},"id":"-k_B_ORUZjOS","executionInfo":{"status":"ok","timestamp":1705847235482,"user_tz":-420,"elapsed":2140,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"f2fa7168-aff7-4f85-c2d1-714d27b44af3"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-35630c5f32db>:2: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(x)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Time', ylabel='Density'>"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#phân bố giá trị giao dịch theo từng loại\n","plt.figure(figsize=(8,6))\n","sns.boxplot(x=\"Class\", y=\"Amount\", data = df)\n","plt.title(\"amount vs class\")\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":581},"id":"GAud2cmYc1KY","executionInfo":{"status":"ok","timestamp":1705847785416,"user_tz":-420,"elapsed":1135,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"f36d917c-d1bc-4f41-b3e8-302ba267361c"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Sự tương quan giữa 2 giá trị amount và time\n","plt.figure(figsize=(8,6))\n","plt.subplot(1, 2, 1)\n","sns.scatterplot(x='Time', y='Amount', hue='Class', data=df, palette='viridis', s=100)\n","plt.title('Amount with Time by class')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":581},"id":"nnSpoAtcdUTj","executionInfo":{"status":"ok","timestamp":1705847919057,"user_tz":-420,"elapsed":16979,"user":{"displayName":"Thắng Hoàng","userId":"14563955622409342950"}},"outputId":"3c3010ca-c50a-4de3-9f2e-7fc65112c330"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Amount with Time by class')"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}],"metadata":{"colab":{"provenance":[],"toc_visible":true,"mount_file_id":"1Dl0x_XxAQ6xphFOJwwdcH1yDe6RCTpdT","authorship_tag":"ABX9TyMlgCsIqIyl2Ti+U5s4K9Yj"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}